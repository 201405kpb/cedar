{"version":3,"sources":["../src/cedar.js"],"names":["factory","define","amd","vg","d3","module","exports","require","window","Cedar","baseUrl","src","cdnProtocol","cdnUrl","document","currentScript","substr","lastIndexOf","location","protocol","options","spec","self","this","opts","width","undefined","height","autolabels","_events","_definition","_defaultDefinition","_view","_tooltip","_methodQueue","_pendingXhr","definition","Error","getJson","err","data","_purgeMethodQueue","override","_getSpecificationUrl","type","specification","dataset","query","_mixin","_defaultQuery","Object","defineProperty","get","set","val","tooltip","id","Date","now","inputs","input","mappings","hasOwnProperty","field","push","length","title","content","prototype","chartTypes","canDraw","drawable","errs","show","_addToMethodQueue","elementId","select","_elementId","_renderer","renderer","token","_token","chk","issues","join","update","emit","_remove","_createTooltip","compiledMappings","_applyDefaultsToMappings","queryFromSpec","JSON","parse","_supplant","stringify","template","_mergeRecursive","url","values","_renderSpec","_createFeatureServiceRequest","cb","error","xhrErr","message","details","console","dir","ex","_placeLabels","_placeaAxisTicks","chartCtor","el","parseInt","style","_attach","fields","lengths","features","forEach","feature","axis","attributes","toString","index","angle","axes","properties","labels","value","titleOffset","Math","abs","ticks","view","items","model","scene","item","datum","key","hasPropertySet","props","clearSelection","eventName","_handler","_handlers","handler","on","off","_validateMappings","missingInputs","i","required","name","_validateData","Array","isArray","firstRow","fld","_getMappingFieldName","mappingName","fieldName","defn","defaultQuery","where","returnGeometry","returnDistinctValues","returnIdsOnly","returnCountOnly","outFields","sqlFormat","f","indexOf","evtName","evt","registeredHandler","callback","registeredEvent","object","splice","args","method","action","apply","elem","tooltip_div","getElementById","createElement","innerHTML","getElementsByTagName","appendChild","className","cssText","body","insertBefore","firstChild","event","_updateTooltip","cedartip","display","top","pageY","left","pageX","replace","match","$1","source","arguments","entries","p","responseText","uri","split","xhr","header","post","mergedQuery","bbox","geometry","bboxArr","xmin","ymin","xmax","ymax","inSR","groupByFieldsForStatistics","group","outStatistics","count","orderByFields","statisticType","onStatisticField","outStatisticFieldName","sort","_serializeQueryParams","tmpl","params","t","a","b","r","_getTokenValue","constructor","obj1","obj2","e","tokens","tokenName","tmpTokens","tokenNameParts","str","encodeURIComponent","queryString"],"mappings":"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","file":"cedar.min.js","sourcesContent":["/**\n * Cedar\n *\n * Generic charting / visualization library for the ArcGIS Platform\n * that leverages vega + d3 internally.\n * @access private\n */\n(function (factory) {\n  /* global module */\n  'use strict';\n  //define an AMD module that relies on 'vega'\n  if (typeof define === 'function' && define.amd) {\n    define(['vega', 'd3'], function (vg, d3) {\n      return factory(vg, d3);\n    });\n  //define a common js module that relies on 'vega'\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory(require('vega'), require('d3'));\n  }\n\n  if (typeof window !== 'undefined' && window.vg && window.d3) {\n    window.Cedar = factory(window.vg, window.d3);\n  }\n} (function (vg, d3) {\n  'use strict';\n\n  // get cedar root URL for loading chart specs\n  var baseUrl = (function() {\n    var cdnProtocol = 'http:';\n    var cdnUrl = '//esri.github.io/cedar/js';\n    var src;\n    if (window && window.document) {\n      src = (window.document.currentScript && window.document.currentScript.src);\n      if (src) {\n        // real browser, get base url from current script\n        return src.substr(0, src.lastIndexOf('/'));\n      } else {\n        // ie, set base url to CDN\n        // NOTE: could fallback to CDN only if can't find any scripts named cedar\n        return (window.document.location ? window.document.location.protocol : cdnProtocol) + cdnUrl;\n      }\n    } else {\n      // node, set base url to CDN\n      return cdnProtocol + cdnUrl;\n    }\n  })();\n\n/**\n * Creates a new Chart object.\n *\n * @example\n *  var chart = new Cedar({\n *    \"type\": \"bar\"\n *    \"dataset\":\n *      \"url\":\"http://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Education_WebMercator/MapServer/5\",\n *      \"query\": {\n *        \"groupByFieldsForStatistics\": \"FACUSE\",\n *        \"outStatistics\": [{\n *          \"statisticType\": \"sum\",\n *          \"onStatisticField\": \"TOTAL_STUD\",\n *          \"outStatisticFieldName\": \"TOTAL_STUD_SUM\"\n *        }]\n *      },\n *      \"mappings\":{\n *        \"sort\": \"TOTAL_STUD_SUM DESC\",\n *        \"x\": {\"field\":\"FACUSE\",\"label\":\"Facility Use\"},\n *        \"y\": {\"field\":\"TOTAL_STUD_SUM\",\"label\":\"Total Students\"}\n *      }\n *    }\n *  });\n *\n * @param {Object} options\n * @param {String} options.type - Chart type as a chartType (\"bar\") or a URL to a Cedar specification\n * @param {Object} options.dataset - Dataset definition including Source and Style mappings\n * @param {String} options.dataset.url - GeoService Layer URL\n *\n * \"url\":\"http://.../rest/services/DATA/Education/MapServer/5\"\n * @param {Object} options.dataset.query - GeoServices Layer query parameters (where, bbox, outStatistics) [optional]\n *\n * \"query\": {\n *   \"groupByFieldsForStatistics\": \"FACUSE\",\n *   \"outStatistics\": [{\n *     \"statisticType\": \"sum\",\n *     \"onStatisticField\": \"TOTAL_STUD\",\n *     \"outStatisticFieldName\": \"TOTAL_STUD_SUM\" }] }\n * @param {Object} options.dataset.data - Inline feature collection, alternative to data from a URL\n *\n * \"data\": {\"features\":[{\"attributes\":{\"ZIP_CODE\":20005,\"TOTAL_STUD_SUM\":327}}]}\n * @param {Object} options.dataset.mappings - Relates data items to the chart style definition\n * @param {Object} options.override - Changes to the \"options.type\" chart specification\n * @param {Object} options.tooltip - Optional on-hover tooltip. Element has class=\"cedar-tooltip\" for styling.\n * @param {String} options.tooltip.id - Optional HTML element to use for tooltip. (default: unique id created)\n * @param {String} options.tooltip.title - Templated tooltip heading. Uses \"{Variable} template format\"\n * @param {String} options.tooltip.content - Templated tooltip body text. Uses \"{Variable} template format\"\n * @return {Object} new Cedar chart object\n */\nvar Cedar = function Cedar(options){\n  //close over this for use in callbacks\n  var self = this;\n\n  //ensure an opts object\n  var opts = options || {};\n\n  var spec;\n\n\n  // Internals for holding state\n\n  // Cedar configuration such as size\n  this.width = undefined;\n  this.height = undefined;\n  this.autolabels = true;\n\n  // Array to hold event handlers\n  this._events = [];\n\n  //initialize the internal definition hash\n  this._definition = Cedar._defaultDefinition();\n\n  //the vega view aka the chart\n  this._view = undefined;\n\n  //the vega view aka the chart\n  this._tooltip = undefined;\n\n  //queue to hold methods called while\n  //xhrs are in progress\n  this._methodQueue=[];\n\n  // override base URL\n  if (opts.baseUrl) {\n    this.baseUrl = opts.baseUrl;\n  }\n\n  /**\n   * Flag used to determine if the library is\n   * waiting for an xhr to return.\n   * @access private\n   */\n  this._pendingXhr = false;\n\n  //defintion\n  if(opts.definition){\n    //is it an object or string(assumed to be url)\n    if(typeof opts.definition === 'object'){\n      //hold onto the definition\n      this._definition = opts.definition;\n    }else if(typeof opts.definition === 'string' ){\n      //assume it's a url (relative or abs) and fetch the definition object\n      this._pendingXhr = true;\n      Cedar.getJson(opts.definition, function(err,data){\n        self._pendingXhr = false;\n        self._definition = data;\n        self._purgeMethodQueue();\n      });\n    }else{\n      throw new Error('parameter definition must be an object or string (url)');\n    }\n  }\n\n  if(opts.override) {\n    this._definition.override = opts.override;\n  }\n\n  // specification\n\n  // first, check for pre-defined chart type passed as \"type\"\n  spec = this._getSpecificationUrl(opts.type);\n\n  // if url or object passed used that\n  if(opts.specification){\n    spec = opts.specification;\n  }\n\n  if (spec) {\n    //is it an object or string(assumed to be url)\n    if(typeof spec === 'object'){\n      //hold onto the template\n      this._definition.specification = spec;\n\n    }else if(typeof spec === 'string' ){\n      //assume it's a url (relative or abs) and fetch the template object\n      this._pendingXhr = true;\n      Cedar.getJson(spec, function(err,data){\n        self._pendingXhr = false;\n        self._definition.specification = data;\n        self._purgeMethodQueue();\n      });\n    }else{\n      throw new Error('parameter specification must be an object or string (url)');\n    }\n  }\n\n  //allow a dataset to be passed in...\n  if(opts.dataset && typeof opts.dataset === 'object'){\n    opts.dataset.query = Cedar._mixin({}, Cedar._defaultQuery(), opts.dataset.query);\n    //assign it\n    this._definition.dataset = opts.dataset;\n  }\n\n  /**\n   * Properties\n   *\n   * ES 5.1 syntax, so IE 8 & lower won't work\n   *\n   * If the val is a url, should we expect\n   * cedar to fetch the object?\n   *\n   * I'd say no... as that violates the principal\n   * of least suprise. Also - cedar has a .getJSON\n   * helper method the dev should use.\n   *\n   * @access private\n   */\n  Object.defineProperty(this, 'dataset', {\n    get: function() {\n        return this._definition.dataset;\n    },\n    set: function(val) {\n       this._definition.dataset = val;\n    }\n  });\n\n  Object.defineProperty(this, 'specification', {\n    get: function() {\n        return this._definition.specification;\n    },\n    set: function(val) {\n      this._definition.specification = val;\n    }\n  });\n\n  Object.defineProperty(this, 'override', {\n    get: function() {\n        return this._definition.override;\n    },\n    set: function(val) {\n      this._definition.override = val;\n    }\n  });\n\n  Object.defineProperty(this, 'tooltip', {\n    get: function() {\n        return this._definition.tooltip;\n    },\n    set: function(val) {\n      this._definition.tooltip = val;\n      if( this._definition.tooltip.id === undefined || this._definition.tooltip.id === null ) {\n        this._definition.tooltip.id = \"cedar-\" + Date.now();\n      }\n    }\n  });\n\n  //allow a tooltip to be passed in...\n  if(opts.tooltip && typeof opts.tooltip === 'object'){\n    this.tooltip = opts.tooltip;\n  } else {\n    // Build a default tooltip based on first two inputs\n    var inputs = [];\n    for(var input in this._definition.dataset.mappings){\n      if (this._definition.dataset.mappings.hasOwnProperty(input)) {\n        var field = this._definition.dataset.mappings[input].field;\n        if(field !== undefined && field !== null) {\n          inputs.push(field);\n        }\n      }\n    }\n    if(inputs.length >= 2) {\n      this.tooltip = {\n        \"title\": \"{\" + inputs[0] + \"}\",\n        \"content\": \"{\" + inputs[1] + \"}\"\n      };\n    }\n  }\n};\n\n// base URL of this library\nCedar.prototype.baseUrl = baseUrl;\n\n/**\n * Default pre-defined chart types\n *\n * ['bar', 'bar-horizontal', 'bubble', 'grouped', 'pie', 'scatter', 'sparkline', 'time'];\n */\nCedar.prototype.chartTypes = ['bar', 'bar-horizontal', 'bubble', 'grouped', 'pie', 'scatter', 'sparkline', 'time', 'time-trendline'];\n\n/**\n * Inspect the current state of the object\n * and determine if we have sufficient information\n * to render the chart\n * @return {object} Hash of the draw state + any missing requirements\n */\nCedar.prototype.canDraw = function(){\n\n  //dataset?\n  //dataset.url || dataset.data?\n  //dataset.mappings?\n  //specification?\n  //specification.template?\n  //specification.inputs?\n  //specification.inputs ~ dataset.mappings?\n\n  return {drawable:true, errs:[]};\n\n};\n\n/**\n * Draw the chart into the DOM element\n *\n * @example\n *\n * var chart = new Cedar({\n *   \"type\": \"scatter\",\n *   \"dataset\":{\n *     \"url\":\"http://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Education_WebMercator/MapServer/5\",\n *     \"query\":{},\n *     \"mappings\":{\n *       \"x\": {\"field\":\"POPULATION_ENROLLED_2008\",\"label\":\"Enrolment 2008\"},\n *       \"y\": {\"field\":\"SQUARE_FOOTAGE\",\"label\":\"Square Footage\"},\n *       \"color\":{\"field\":\"FACUSE\",\"label\":\"Facility Type\"}\n *     }\n *   }\n * });\n *\n * chart.show({\n *   elementId: \"#chart\"\n * });\n *\n * @param  {object} options\n * @param {String} options.elementId [required] Id of the Dom element into which the chart will be rendered\n * @param {String} options.renderer \"canvas\" or \"svg\" (default: `svg`)\n * @param {Boolean} options.autolabels place axis labels outside any tick labels (default: false)\n * @param {String} options.token Token to be used if the data or spec are on a secured server\n */\nCedar.prototype.show = function(options){\n  if(this._pendingXhr){\n\n    this._addToMethodQueue('show', [options]);\n\n  }else{\n\n    var err;\n    //ensure we got an elementId\n    if( !options.elementId ){\n      err= \"Cedar.show requires options.elementId\";\n    }\n    //check if element exists in the page\n    if(d3.select(options.elementId)[0][0] === null){\n      err = \"Element \" + options.elementId + \" is not present in the DOM\";\n     }\n\n    //hold onto the id\n    this._elementId = options.elementId;\n    this._renderer = options.renderer || \"svg\"; //default to svg\n    this.width = options.width || undefined; // if not set in API, always base on current div size\n    this.height = options.height || undefined;\n    if(options.autolabels !== undefined && options.autolabels !== null){\n      this.autolabels = options.autolabels;\n    }\n    //hold onto the token\n    if(options.token){\n      this._token = options.token;\n    }\n\n    if( err ){\n      throw new Error( err );\n    }\n    var chk = this.canDraw();\n    if(chk.drawable){\n      //update centralizes the spec compilation & drawing\n      this.update();\n    }else{\n      //report the issues\n      var errs = chk.issues.join(',');\n      throw new Error('Chart can not be drawn because: ' + errs);\n    }\n\n  }\n};\n\n/**\n * Draw the chart based on any changes to data or specifications\n * Should be called after a user modifies\n * the dataset, query, mappings, chart specification or element size\n *\n * @example\n * dataset = {\"url\": \"...\", \"mappings\": {\"x\": {\"field\": \"STATE\"}, \"y\": {\"field\": \"POPULATION\"}}};\n * chart = new Cedar({ \"type\": \"bar\", \"dataset\": dataset });\n * chart.show({elementId: \"#chart\"});\n * chart.dataset.query.where = \"POPULATION>30000\";\n * chart.update();\n */\nCedar.prototype.update = function(){\n  var self = this;\n\n  if ( this._view ) {\n    this.emit('update-start');\n  }\n\n  if(this._pendingXhr){\n\n    this._addToMethodQueue('update');\n\n  }else{\n\n    if(this._view){\n      //remove handlers\n      //TODO Remove existing handlers\n      this._remove(this._view);\n    }\n    try{\n\n      // Creates the HTML Div and styling if not already created\n      if(self._definition.tooltip !== undefined && self._definition.tooltip !== null) {\n        self._createTooltip(self._definition.tooltip.id);\n      }\n\n      //ensure we have required inputs or defaults\n      var compiledMappings = Cedar._applyDefaultsToMappings(this._definition.dataset.mappings, this._definition.specification.inputs); //Cedar._compileMappings(this._definition.dataset, this._definition.specification.inputs);\n\n      var queryFromSpec = Cedar._mixin({}, this._definition.specification.query, this._definition.dataset.query);\n      queryFromSpec = JSON.parse(Cedar._supplant(JSON.stringify(queryFromSpec), compiledMappings));\n\n      //allow binding to query properties\n      compiledMappings.query = queryFromSpec;\n\n      //compile the template + mappings --> vega spec\n      var spec = JSON.parse(Cedar._supplant(JSON.stringify(this._definition.specification.template), compiledMappings));\n\n      // merge in user specified style overrides\n      spec = Cedar._mergeRecursive(spec, this._definition.override);\n\n      //if the spec has a url in the data node, delete it\n      if(spec.data[0].url){\n        delete spec.data[0].url;\n      }\n\n      if(this._definition.dataset.data){\n\n        //create the data node using the passed in data\n        spec.data[0].values = this._definition.dataset.data;\n\n        //send to vega\n        this._renderSpec(spec);\n\n      }else{\n\n        //we need to fetch the data so\n        var url = Cedar._createFeatureServiceRequest(this._definition.dataset, queryFromSpec);\n\n        //create a callback closure to carry the spec\n        var cb = function(err,data){\n\n          if (err) {\n            throw new Error('Error fetching data, ', err);\n          } else if ( data.error ) {\n            var xhrErr = data.error.message || data.error.details[0];\n            throw new Error(xhrErr);\n          }\n          //todo add error handlers for xhr and ags errors\n          spec.data[0].values = data;\n          console.dir(spec);\n          //send to vega\n          self._renderSpec(spec);\n\n        };\n\n        //fetch the data from the service\n        Cedar.getJson(url, cb);\n      }\n    }\n    catch(ex){\n      throw(ex);\n    }\n  }\n};\n\n/**\n * Render a compiled Vega specification using Vega Runtime\n * @access private\n */\nCedar.prototype._renderSpec = function(spec){\n  var self = this;\n  // try{\n    if(self.autolabels === true) {\n        spec = self._placeLabels(spec);\n        spec = self._placeaAxisTicks(spec);\n    }\n    //use vega to parse the spec\n    //it will handle the spec as an object or url\n    vg.parse.spec(spec, function(chartCtor) {\n\n      //create the view\n      self._view = chartCtor({\n        el: self._elementId,\n        renderer: self._renderer\n      });\n\n\n      var width = self.width || parseInt(d3.select(self._elementId).style('width'), 10) || 500;\n      var height = self.height || parseInt(d3.select(self._elementId).style('height'), 10) || 500;\n\n      //render into the element\n      self._view.width(width).height(height).update();\n\n      //attach event proxies\n      self._attach(self._view);\n\n      if ( self._view ) {\n        self.emit('update-end');\n      }\n\n    });\n  // }\n  // catch(ex){\n  //   throw(ex);\n  // }\n};\n\n/**\n * Automatically determines axis title placement\n *\n * Calculates the maximum length of a tick label and adds padding\n * @todo remove expectation that there are both x,y axes\n *\n * @access private\n */\nCedar.prototype._placeLabels = function(spec) {\n  var self = this;\n  try{\n    var fields = {};\n    var lengths = {};\n    var inputs = [];\n    // Get all inputs that may be axes\n    for(var input in self._definition.dataset.mappings){\n      // check also if property is not inherited from prototype\n      if (self._definition.dataset.mappings.hasOwnProperty(input)) {\n        var field = self._definition.dataset.mappings[input].field;\n        if(field !== undefined && field !== null) {\n          inputs.push(input);\n          fields[input] = field;\n          lengths[input] = 0;\n        }\n      }\n    }\n    var length = 0;\n\n    // Find the max length value for each axis\n    spec.data[0].values.features.forEach(function(feature) {\n      inputs.forEach(function(axis) {\n        length = (feature.attributes[fields[axis]] || \"\").toString().length;\n        if( length > lengths[axis]) {\n          lengths[axis] = length;\n        }\n      });\n    });\n\n    // Change each axis title offset based on longest value\n    inputs.forEach(function(axis, index) {\n      var angle = 0;\n      if(spec.axes !== undefined && spec.axes[index] !== undefined) {\n\n        if (spec.axes[index].properties.labels.angle !== undefined) {\n          angle = spec.axes[index].properties.labels.angle.value;\n        }\n        if(spec.axes[index].type == 'y' ) {\n          angle = 100 - angle;\n        }\n        spec.axes[index].titleOffset = Math.abs(lengths[axis] * angle/100 * 8) + 35;\n        //chart._view.model().defs().marks.axes[index].titleOffset = lengths[axis]*4+20\n      }\n    });\n    return spec;\n\n  } catch(ex) {\n    throw(ex);\n  }\n};\n\n/**\n * Automatically determines number of axis tick marks\n *\n * Calculates the maximum length of a tick label and adds padding\n * @todo remove expectation that there are both x,y axes\n *\n * @access private\n */\nCedar.prototype._placeaAxisTicks = function(spec) {\n  var self = this;\n  if(spec.axes !== undefined) {\n    try{\n      var width = self.width || parseInt(d3.select(self._elementId).style('width'), 10) || 500;\n      var height = self.height || parseInt(d3.select(self._elementId).style('height'), 10) || 500;\n\n      spec.axes[0].ticks = width / 100;\n      if(spec.axes[1] !== undefined) {\n        spec.axes[1].ticks = height / 30;\n      }\n    } catch(ex) {\n      throw(ex);\n    }\n  }\n\n  return spec;\n};\n\n/**\n * Highlight marker based on attribute value\n *\n * @example\n * chart = new Cedar({...});\n * chart.select({key: \"ZIP_CODE\", value: \"20002\"});\n *\n * @param {Object} options - Object(key, value) to match. Calls hover on mark\n * @returns {Array} items - array of chart objects that match the criteria\n */\nCedar.prototype.select = function( options ) {\n  var self = this;\n  var view = this._view;\n  var items = view.model().scene().items[0].items[0].items;\n\n  items.forEach(function(item) {\n    if ( item.datum.attributes[options.key] === options.value ) {\n      if ( item.hasPropertySet(\"hover\") ) {\n        self._view.update({props:\"hover\", items:item});\n      }\n    }\n  });\n\n  return items;\n\n};\n\n\n/**\n * Removes highlighted chart items\n *\n * If \"options\" are used, only clear specific items, otherwise clears all highlights.\n * @param {Object} options - Object(key, value) to match. Calls hover on mark\n * @returns {Array} items - array of chart objects that match the criteria, or null if all items.\n */\nCedar.prototype.clearSelection = function( options ) {\n  var self = this;\n  var view = this._view;\n\n  if ( options && options.key ) {\n    var items = view.model().scene().items[0].items[0].items;\n    items.forEach(function(item) {\n      if ( item.datum.attributes[options.key] === options.value ) {\n        self._view.update({props:\"update\", items:item});\n      }\n    });\n    return items;\n  } else {\n    //clear all\n    self._view.update();\n    return null;\n  }\n};\n\n\n/**\n * Trigger a callback\n * @param {Strint} eventName - [\"mouseover\",\"mouseout\",\"click\",\"update-start\",\"update-end\"]\n */\nCedar.prototype.emit = function(eventName) {\n  if (this._view._handler._handlers[ eventName ] && this._view._handler._handlers[ eventName ][0] !== undefined){\n    this._view._handler._handlers[ eventName ][0].handler();\n  }\n};\n\n/**\n * Attach the generic proxy handlers to the chart view\n * @access private\n */\nCedar.prototype._attach = function(view){\n\n  view.on('mouseover', this._handler('mouseover'));\n  view.on('mouseout', this._handler('mouseout'));\n  view.on('mousemove', this._handler('mousemove'));\n  view.on('click', this._handler(\"click\"));\n  view.on('update-start', this._handler('update-start'));\n  view.on('update-end', this._handler('update-end'));\n\n};\n\n/**\n * Remove all event handlers from the view\n * @access private\n */\nCedar.prototype._remove = function(view){\n\n  view.off('mouseover');\n  view.off('mouseout');\n  view.off('mousemove');\n  view.off('click');\n  view.off('update-start');\n  view.off('update-end');\n\n};\n\n/**\n * Helper function that validates that the\n * mappings hash contains values for all\n * the inputs\n * @param  {array} inputs   Array of inputs\n * @param  {object} mappings Hash of mappings\n * @return {array}          Missing mappings\n * @access private\n */\nCedar._validateMappings = function(inputs, mappings){\n  var missingInputs = [], input;\n  for(var i=0;i<inputs.length;i++){\n    input = inputs[i];\n    if(input.required){\n      if(!mappings[input.name]){\n        missingInputs.push(input.name);\n      }\n    }\n  }\n  return missingInputs;\n};\n\n/**\n * Validate that the incoming data has the fields expected\n * in the mappings\n * @access private\n */\nCedar._validateData = function(data, mappings){\n  var missingInputs = [];\n  if(!data.features || !Array.isArray(data.features)){\n    throw new Error('Data is expected to have features array!');\n  }\n  var firstRow = data.features[0].attributes;\n  for(var key in mappings){\n    if (mappings.hasOwnProperty(key)) {\n      var fld = Cedar._getMappingFieldName(key, mappings[key].field);\n      if(!firstRow.hasOwnProperty(fld)){\n        missingInputs.push(fld);\n      }\n    }\n  }\n  return missingInputs;\n};\n\n/**\n * Centralize and abstract the computation of\n * expected field names, based on the mapping name\n * @access private\n */\nCedar._getMappingFieldName = function(mappingName, fieldName){\n\n  // this function why?\n\n  var name = fieldName;\n  // if(mappingName.toLowerCase() === 'count'){\n  //  name = fieldName + '_SUM';\n  // }\n  return name;\n};\n\n/**\n * Return a default definition object\n * @access private\n */\nCedar._defaultDefinition = function(){\n  var defn = {\n    \"dataset\": {\n      \"query\": this._defaultQuery()\n    },\n    \"template\":{}\n  };\n\n  defn.dataset.query = Cedar._defaultQuery();\n\n  return defn;\n};\n\n/**\n * Default Query Object\n * @access private\n */\nCedar._defaultQuery = function(){\n  var defaultQuery = {\n    \"where\": \"1=1\",\n    \"returnGeometry\": false,\n    \"returnDistinctValues\": false,\n    \"returnIdsOnly\": false,\n    \"returnCountOnly\": false,\n    \"outFields\": \"*\",\n    \"sqlFormat\": \"standard\",\n    \"f\": \"json\"\n  };\n  return defaultQuery;\n};\n\n/**\n * Get pre-defined spec url\n * @access private\n */\nCedar.prototype._getSpecificationUrl = function(spec){\n  if (this.chartTypes.indexOf(spec) !== -1) {\n    spec = this.baseUrl + '/charts/' + this.chartTypes[this.chartTypes.indexOf(spec)] + '.json';\n  }\n  return spec;\n};\n\n/**\n * Generic event handler proxy\n * @access private\n */\nCedar.prototype._handler = function(evtName) {\n  var self = this;\n\n  //return a handler function w/ the events hash closed over\n  var handler = function(evt, item){\n    self._events.forEach( function(registeredHandler){\n      if(registeredHandler.type === evtName){\n        //invoke the callback with the data\n        if ( item ) {\n          registeredHandler.callback(evt, item.datum.attributes);\n        } else {\n          registeredHandler.callback(evt,null);\n        }\n      }\n    });\n  };\n  return handler;\n};\n\n/**\n * Add a handler for the named event.\n * Events:\n *  - mouseover\n *  - mouseout\n *  - click\n *  - update-start\n *  - update-end\n *\n *\n *\n * Callback from Cedar events\n *  - callback Cedar~eventCallback\n *  - param {Object} event - event response such as mouse location\n *  - param {Object} data - chart data object\n *\n * @example\n * var chart = new Cedar({ ... });\n * chart.on('mouseover', function(event, data) {\n *   console.log(\"Mouse Location:\", [event.offsetX, event.offsetY]);\n *   console.log(\"Data value:\", data[Object.keys(data)[0]]);\n * });\n *\n * @param {String} eventName name of the event that invokes callback\n * @param {Cedar~eventCallback} callback - The callback that handles the event.\n */\nCedar.prototype.on = function(evtName, callback){\n  this._events.push({\"type\":evtName, \"callback\":callback});\n};\n\n/**\n * Remove a handler for the named event\n */\nCedar.prototype.off = function(evtName, callback){\n  this._events.forEach(function(registeredEvent, index, object) {\n    if(registeredEvent.type == evtName && registeredEvent.callback == callback ) {\n      object.splice(index, 1);\n    }\n  });\n};\n\n\n/**\n * Creates an entry in the method queue, excuted\n * once a pending xhr is completed\n * @access private\n */\nCedar.prototype._addToMethodQueue = function(name, args){\n  this._methodQueue.push({ method: name, args: args });\n};\n\n/**\n * empties the method queue by calling the queued methods\n * This helps build a more syncronous api, while still\n * doing async things in the code\n * @access private\n */\nCedar.prototype._purgeMethodQueue = function(){\n  var self = this;\n  if(self._methodQueue.length > 0){\n\n    for(var i=0;i<self._methodQueue.length;i++){\n      var action = self._methodQueue[i];\n      self[action.method].apply(self, action.args);\n    }\n  }\n};\n\n/**\n * Instantiates the tooltip element and styling\n * @access private\n */\nCedar.prototype._createTooltip = function(elem) {\n  var self = this;\n  var tooltip_div = document.getElementById(elem);\n\n  // This tooltip has already been created\n  if(tooltip_div !== undefined && tooltip_div !== null) {\n    return tooltip_div;\n  }\n\n  // TODO: remove inline CSS\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  // style.innerHTML = \".cedar-tooltip {background-color: #f36f22; padding: 3px 10px; color: #fff; margin: -30px 0 0 20px; position: absolute; z-index: 2000; font-size: 10px; } .cedar-tooltip .title {font-size: 13pt; font-weight: bold; } .cedar-tooltip .content {font-size: 10pt; } .cedar-tooltip:after {content: ''; position: absolute; border-style: solid; border-width: 15px 15px 15px 0; border-color: transparent #f36f22; display: block; width: 0; z-index: 1; left: -15px; top: 14px; }\";\n  style.innerHTML = \".cedar-tooltip {background-color: white; padding: 3px 10px; color: #333; margin: -30px 0 0 20px; position: absolute; z-index: 2000; font-size: 10px; border: 1px solid #BBB;} .cedar-tooltip .title {font-size: 13pt; font-weight: bold; } .cedar-tooltip .content {font-size: 10pt; } \";\n  document.getElementsByTagName('head')[0].appendChild(style);\n\n  tooltip_div = document.createElement('div');\n  tooltip_div.className = \"cedar-tooltip\";\n  tooltip_div.id = elem;\n  tooltip_div.style.cssText = \"display: none\";\n  // We need tooltip at the top of the page\n  document.body.insertBefore(tooltip_div, document.body.firstChild);\n\n\n  self.on('mouseout', function(event,data){\n    self._updateTooltip(event, null);\n  });\n  self.on('mousemove', function(event,data){\n    self._updateTooltip(event, data);\n  });\n  return tooltip_div;\n};\n\n/**\n * Places the tooltip and fills in content\n *\n * @access private\n */\nCedar.prototype._updateTooltip = function(event, data) {\n  var cedartip = document.getElementById(this._definition.tooltip.id);\n  if(data === undefined || data === null) {\n    cedartip.style.display = \"none\";\n    return;\n  }\n  cedartip.style.top = event.pageY + \"px\";\n  cedartip.style.left = event.pageX + \"px\";\n  cedartip.style.display = \"block\";\n  var content = \"<span class='title'>\" + this._definition.tooltip.title + \"</span><br />\";\n  content += \"<p class='content'>\" + this._definition.tooltip.content + \"</p>\";\n\n  cedartip.innerHTML = content.replace( /\\{(\\w+)\\}/g, function replacer(match, $1){\n    return data[$1];\n  } );\n\n};\n\n\n/**\n* @access private\n*/\nCedar._mixin = function(source) {\n    /*jshint loopfunc: true*/\n    // TODO: prob should replace w/ forEach()\n    for (var i = 1; i < arguments.length; i++) {\n        d3.entries(arguments[i]).forEach(function(p) {\n            source[p.key] = p.value;\n        });\n    }\n    return source;\n};\n\n/**\n * Helper function to request JSON from a URL\n * @param  {String}   url      URL to json file\n * @param  {Function} callback node-style callback function (error, data)\n */\nCedar.getJson = function( url, callback ){\n  var cb = function(err,data) {\n    if(err){\n      callback('Error loading ' + url + ' ' + err.message);\n    }\n    callback(null, JSON.parse(data.responseText));\n  };\n  if(url.length > 2000) {\n    var uri = url.split(\"?\");\n    d3.xhr(uri[0])\n      .header(\"Content-Type\", \"application/x-www-form-urlencoded\")\n      .post(uri[1], cb);\n  } else {\n    d3.xhr(url).get(cb);\n  }\n};\n/**\n * Given a dataset hash, create the feature service\n * query string\n * @access private\n */\nCedar._createFeatureServiceRequest = function( dataset, queryFromSpec ) {\n  var mergedQuery = Cedar._mixin({}, Cedar._defaultQuery(), queryFromSpec);\n\n  //Handle bbox\n  if(mergedQuery.bbox){\n    //make sure a geometry was not also passed in\n    if(mergedQuery.geometry){\n      throw new Error('Dataset.query can not have both a geometry and a bbox specified');\n    }\n    //get the bbox (W,S,E,N)\n    var bboxArr = mergedQuery.bbox.split(',');\n\n    //remove it so it's not serialized as-is\n    delete mergedQuery.bbox;\n\n    //cook it into a json string\n    mergedQuery.geometry = JSON.stringify({\"xmin\": bboxArr[0], \"ymin\": bboxArr[2],\"xmax\": bboxArr[1], \"ymax\": bboxArr[3] });\n    //set the spatial ref as geographic\n    mergedQuery.inSR = '4326';\n  }\n  if(!mergedQuery.groupByFieldsForStatistics && dataset.mappings.group) {\n      mergedQuery.groupByFieldsForStatistics = dataset.mappings.group.field;\n  }\n  if(!mergedQuery.outStatistics && dataset.mappings.count) {\n    // Why are we explicitly statting _SUM as stats type?\n    mergedQuery.orderByFields = dataset.mappings.count.field + \"_SUM\";\n    mergedQuery.outStatistics = JSON.stringify([{\"statisticType\": \"sum\", \"onStatisticField\": dataset.mappings.count.field, \"outStatisticFieldName\": dataset.mappings.count.field + \"_SUM\"}]);\n  }\n\n\n\n  //iterate the mappings keys to check for sort\n  //-----------------------------------------------------------------\n  //This approach would seem 'clean' but if there are multiple fields\n  //to sort by, the order would be determined by how javascript decides to\n  //iterate the mappings property hash.\n  //Thus, using mappings.sort gives the developer explicit control\n  //-----------------------------------------------------------------\n  // var sort = [];\n  // for (var property in dataset.mappings) {\n  //   if (dataset.mappings.hasOwnProperty(property)) {\n  //     if(dataset.mappings[property].sort){\n  //       //ok - build up the sort\n  //       sort.push(dataset.mappings[property].field + ' ' + dataset.mappings[property].sort);\n  //     }\n  //   }\n  // }\n  // if(sort.length > 0){\n  //   mergedQuery.orderByFields = sort.join(',');\n  // }\n  //-----------------------------------------------------------------\n  //check for a sort passed directly in\n  if(dataset.mappings.sort){\n    mergedQuery.orderByFields = dataset.mappings.sort;\n  }\n\n  var url = dataset.url + \"/query?\" + this._serializeQueryParams(mergedQuery);\n\n  if(dataset.token){\n    url = url + '&token=' + dataset.token;\n  }\n\n  return url;\n};\n\n/**\n* @access private\n*/\nCedar._applyDefaultsToMappings = function(mappings, inputs){\n  var errs = [];\n  //loop over the inputs\n  for(var i =0; i < inputs.length; i++){\n    //get the input\n    var input = inputs[i];\n\n    //if it's required and not in the mappings, add an exception\n    if(input.required && !mappings[input.name] ){\n      errs.push(input.name);\n    }\n\n    //if it's not required, has a default and not in the mappings\n    if(!input.required && !mappings[input.name] && input['default']){\n      //add the default\n      mappings[input.name] = input['default'];\n    }\n  }\n\n  if(errs.length > 0){\n    throw new Error('Required Mappings Missing: ' + errs.join(','));\n  }else{\n    return mappings;\n  }\n};\n\n\n/**\n * Token Replacement on a string\n * @param  {string} template string template\n * @param  {object} params   object hash that maps to the tokens to be replaced\n * @return {string}          string with values replaced\n * @access private\n */\nCedar._supplant = function( tmpl, params ){\n  var t = tmpl.replace(/{([^{}]*)}/g,\n    function (a, b) {\n      var r = Cedar._getTokenValue(params, b);\n\n      return typeof r === 'string' || typeof r === 'number' ? r : a;\n    }\n  );\n  return t.replace(/\"{([^{}]*)}\"/g,\n    function(a, b) {\n      var r = Cedar._getTokenValue(params, b);\n      return r.constructor === Array ? r = JSON.stringify(r) : a;\n    }\n  );\n};\n\n/*\n * Recursively merge properties of two objects\n * @access private\n */\nCedar._mergeRecursive = function(obj1, obj2) {\n  for (var p in obj2) {\n    if (obj2.hasOwnProperty(p)) {\n      try {\n        // Property in destination object set; update its value.\n        if ( obj2[p].constructor===Object || obj2[p].constructor===Array) {\n          obj1[p] = Cedar._mergeRecursive(obj1[p], obj2[p]);\n\n        } else {\n          obj1[p] = obj2[p];\n\n        }\n\n      } catch(e) {\n        // Property in destination object not set; create it and set its value.\n        obj1[p] = obj2[p];\n\n      }\n    }\n  }\n\n  return obj1;\n};\n\n/**\n * Get the value of a token from a hash\n * @param  {[type]} tokens    [description]\n * @param  {[type]} tokenName [description]\n * @return {[type]}           [description]\n * Pulled from gulp-token-replace (MIT license)\n * https://github.com/Pictela/gulp-token-replace/blob/master/index.js\n *\n * @access private\n */\nCedar._getTokenValue = function(tokens, tokenName) {\n  var tmpTokens = tokens;\n  var tokenNameParts = tokenName.split('.');\n  for (var i = 0; i < tokenNameParts.length; i++) {\n    if (tmpTokens.hasOwnProperty(tokenNameParts[i])) {\n      tmpTokens = tmpTokens[tokenNameParts[i]];\n    } else {\n      return null;\n    }\n  }\n  return tmpTokens;\n};\n\n/**\n * Serilize an object into a query string\n *\n * @param  {object} params Params for the query string\n * @return {string}        query string\n * @access private\n */\nCedar._serializeQueryParams = function(params) {\n  var str = [];\n  for(var p in params){\n    if (params.hasOwnProperty(p)) {\n      var val = params[p];\n      if (typeof val !== \"string\") {\n          val = JSON.stringify(val);\n      }\n      str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(val));\n    }\n  }\n  var queryString = str.join(\"&\");\n  return queryString;\n};\n\n  return Cedar;\n}));\n"]}