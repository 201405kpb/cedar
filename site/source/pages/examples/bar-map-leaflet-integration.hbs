---
layout: example.hbs
---

<!-- Load Leaflet from CDN-->
<link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" />
<script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>

<!-- Load Esri Leaflet from CDN -->
<script src="http://cdn-geoweb.s3.amazonaws.com/esri-leaflet/1.0.0-rc.4/esri-leaflet.js"></script>

<style>
  #map {width:100%;height:400px;}
</style>

<h1>Bar Chart + Esri Leaflet Map Interaction</h1>

<div id="map"></div>
<div id="chart"></div>



{{#markdown}}
```html
  
   //create a cedar chart
  var chart = new Cedar({"specification":"../data/templates/bar.json"});
  var style = {
      "height": 400,
      "width": 850,
      "marks": [{"properties": {
        "hover": {"fill": {"value": "#c15000"}},
        "update": {"fill": {"value": "#0079c1"}}}}]};

  chart.override = style;

  //create the dataset w/ mappings
  var dataset = {
    "url":"http://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Education_WebMercator/MapServer/5",
      "query": {
        "groupByFieldsForStatistics": "ZIP_CODE",
        "outStatistics": [{
          "statisticType": "sum", 
          "onStatisticField": "TOTAL_STUD", 
          "outStatisticFieldName": "TOTAL_STUD_SUM"
        }]
      },  
    "mappings":{
      "x": {"field":"ZIP_CODE","label":"ZIP Code"},
      "y": {"field":"TOTAL_STUD_SUM","label":"Total Students"}
    }
  };
  //assign to the chart
  chart.dataset = dataset;

  //show the chart
  chart.show({
    elementId: "#chart"
  });
  

  var map = L.map('map').setView([38.9,-77], 11);

  var geojsonMarkerOptions = {
    radius: 8,
    fillColor: style.marks[0].properties.update.fill.value,
    color: "#000",
    weight: 1,
    opacity: 1,
    fillOpacity: 0.8
  };

  L.esri.basemapLayer('Streets').addTo(map);
  var featureLayer = L.esri.featureLayer('http://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Education_WebMercator/MapServer/5', {
   pointToLayer: function (geojson, latlng) {
      return L.circleMarker(latlng, geojsonMarkerOptions);
    },
  });

  featureLayer.addTo(map);


  //CHART EVENTS
  chart.on('mouseover', onChartHover);

  function onChartHover(e,d) {
    
    //get selected value for attribute in chart marker
    var selected = d[dataset.mappings.x.field];

    var hoverStyle = {
      radius: 8,
      fillColor: style.marks[0].properties.hover.fill.value,
      color: "#000",
      weight: 1,
      opacity: 1,
      fillOpacity: 0.8
    };

    featureLayer.setStyle(function(point) {
      if (point.properties[dataset.mappings.x.field] === selected ) {
        return hoverStyle;
      } else {
        return geojsonMarkerOptions;
      }
    });

  } 
```
{{/markdown}}


<script>
  

  //create a cedar chart
  var chart = new Cedar({"specification":"../data/templates/bar.json"});
  var style = {
      "height": 400,
      "width": 850,
      "marks": [{"properties": {
        "hover": {"fill": {"value": "#c15000"}},
        "update": {"fill": {"value": "#0079c1"}}}}]};

  chart.override = style;

  //create the dataset w/ mappings
  var dataset = {
    "url":"http://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Education_WebMercator/MapServer/5",
      "query": {
        "groupByFieldsForStatistics": "ZIP_CODE",
        "outStatistics": [{
          "statisticType": "sum", 
          "onStatisticField": "TOTAL_STUD", 
          "outStatisticFieldName": "TOTAL_STUD_SUM"
        }]
      },  
    "mappings":{
      "x": {"field":"ZIP_CODE","label":"ZIP Code"},
      "y": {"field":"TOTAL_STUD_SUM","label":"Total Students"}
    }
  };

  //assign to the chart
  chart.dataset = dataset;

  //show the chart
  chart.show({
    elementId: "#chart"
  });
  

  var map = L.map('map').setView([38.9,-77], 11);

  var geojsonMarkerOptions = {
    radius: 8,
    fillColor: style.marks[0].properties.update.fill.value,
    color: "#000",
    weight: 1,
    opacity: 1,
    fillOpacity: 0.8
  };

  L.esri.basemapLayer('Streets').addTo(map);
  var featureLayer = L.esri.featureLayer('http://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Education_WebMercator/MapServer/5', {
   pointToLayer: function (geojson, latlng) {
      return L.circleMarker(latlng, geojsonMarkerOptions);
    },
  });

  featureLayer.addTo(map);


  //CHART EVENTS
  chart.on('mouseover', onChartHover);

  function onChartHover(e,d) {
    
    //get selected value for attribute in chart marker
    var selected = d[dataset.mappings.x.field];

    var hoverStyle = {
      radius: 8,
      fillColor: style.marks[0].properties.hover.fill.value,
      color: "#000",
      weight: 1,
      opacity: 1,
      fillOpacity: 0.8
    };

    featureLayer.setStyle(function(point) {
      if (point.properties[dataset.mappings.x.field] === selected ) {
        return hoverStyle;
      } else {
        return geojsonMarkerOptions;
      }
    });

  } 

</script>